name: Update

on:
  # every Sunday at 00:00 UTC
  # https://crontab.guru/#0_2_*_*_0
  schedule:
    - cron: '0 2 * * 0'

  workflow_dispatch:
    inputs:
      only-labels:
        description: Only run label synchronization.
        default: true
        type: boolean

      delete-unmapped-labels:
        description: Delete labels not mapped in either global or local label configurations.
        default: false
        type: boolean
      
      dry-run-labels:
        description: Run label synchronization workflow without making any changes.
        default: false
        type: boolean


  issue_comment:
    types:
      - created

jobs:
  update:
    if: >-
      !github.event.repository.fork
      && (
        github.event_name == 'schedule'
        || (
          github.event_name == 'workflow_dispatch'
          && !inputs.only-labels
        )
        || (
          github.event_name == 'issue_comment'
          && github.event.issue.pull_request
          && (
            github.event.comment.body == '@conda-bot render'
            || github.event.comment.body == '@conda-bot recreate'
          )
        )
      )
    runs-on: ubuntu-latest
    steps:
      - if: github.event_name == 'issue_comment'
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes
          reactions-edit-mode: replace
          token: ${{ secrets.SYNC_TOKEN }}

      - if: github.event.comment.body == '@conda-bot render'
        name: configure git origin
        run: |
          echo REPOSITORY=$(curl --silent ${{ github.event.issue.pull_request.url }} | jq --raw-output '.head.repo.full_name') >> $GITHUB_ENV
          echo REF=$(curl --silent ${{ github.event.issue.pull_request.url }} | jq --raw-output '.head.ref') >> $GITHUB_ENV

      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          repository: ${{ env.REPOSITORY || github.repository }}
          ref: ${{ env.REF || '' }}
          token: ${{ secrets.SYNC_TOKEN }}

      - name: configure git user
        run: |
          git config user.name 'Conda Bot'
          git config user.email '18747875+conda-bot@users.noreply.github.com'

      - uses: conda/actions/combine-durations@combine-durations

      - uses: conda/actions/template-files@template-files

      - name: commit changes
        run: git add . && git commit --message "ðŸ¤– updated file(s)" || true

      - if: github.event.comment.body != '@conda-bot render'
        id: create
        uses: peter-evans/create-pull-request@6d6857d36972b65feb161a90e484f2984215f83e # v6.0.5
        with:
          push-to-fork: kenodegard-bot/${{ github.event.repository.name }}
          token: ${{ secrets.SYNC_TOKEN }}
          branch: update
          delete-branch: true
          title: ðŸ¤– Update
          body: |
            [update.yml]: ${{ github.server_url }}/${{ github.repository }}/blob/main/.github/workflows/update.yml

            This is your friendly repository update PR triggered by @${{ github.triggering_actor }} via ${{ github.event_name }}.

            <details>
            <summary>Commands</summary>

            Trigger actions by commenting on this PR:

            - `@conda-bot render` will run rendering workflows and commit and push any changes to this PR
            - `@conda-bot recreate` will recreate this PR, overwriting any edits that have been made to it
            - `@conda-bot labels` will synchronize labels

            </details>

            ###### Auto-generated by the [`update.yml`][update.yml] workflow, see ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.

      - if: github.event.comment.body == '@conda-bot render'
        id: update
        name: push changes
        run: git push --force-with-lease

      - if: always() && github.event_name == 'issue_comment'
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: ${{ (steps.create.conclusion == 'success' || steps.update.conclusion == 'success') && 'hooray' || 'confused' }}
          reactions-edit-mode: replace
          token: ${{ secrets.SYNC_TOKEN }}

  labels:
    if: >-
      !github.event.repository.fork
      && (
        github.event_name == 'schedule'
        || github.event_name == 'workflow_dispatch'
        || (
          github.event_name == 'issue_comment'
          && github.event.issue.pull_request
          && github.event.comment.body == '@conda-bot labels'
        )
      )
    runs-on: ubuntu-latest
    env:
      GLOBAL: https://raw.githubusercontent.com/conda/infrastructure/main/.github/global.yml
      LOCAL: .github/labels.yml
    permissions:
      # https://github.com/EndBug/label-sync/issues/187#issuecomment-1442103739
      issues: write
    steps:
      - if: github.event_name == 'issue_comment'
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes
          reactions-edit-mode: replace
          token: ${{ secrets.SYNC_TOKEN }}

      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      
      - id: has_local
        uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3.0.0
        with:
          files: ${{ env.LOCAL }}
      
      - name: Global Only
        if: steps.has_local.outputs.files_exists == 'false'
        id: global
        uses: EndBug/label-sync@52074158190acb45f3077f9099fea818aa43f97a # v2.3.3
        with:
          config-file: ${{ env.GLOBAL }}
          delete-other-labels: ${{ inputs.delete-unmapped-labels || 'false' }}
          dry-run: ${{ inputs.dry-run-labels || 'false' }}

      - name: Global & Local
        if: steps.has_local.outputs.files_exists == 'true'
        id: local
        uses: EndBug/label-sync@52074158190acb45f3077f9099fea818aa43f97a # v2.3.3
        with:
          config-file: |
            ${{ env.GLOBAL }}
            ${{ env.LOCAL }}
          delete-other-labels: ${{ inputs.delete-unmapped-labels || 'false' }}
          dry-run: ${{ inputs.dry-run-labels || 'false' }}

      - if: always() && github.event_name == 'issue_comment'
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: ${{ (steps.global.conclusion == 'success' || steps.local.conclusion == 'success') && 'hooray' || 'confused' }}
          reactions-edit-mode: replace
          token: ${{ secrets.SYNC_TOKEN }}
