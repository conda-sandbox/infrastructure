name: Update

on:
  # every Sunday at 00:00 UTC
  # https://crontab.guru/#0_0_*_*_0
  # schedule:
  #   - cron: '0 0 * * 0'

  # https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_dispatch
  workflow_dispatch:

  issue_comment:
    types:
      - created

env:
  GIT_TRACE: 1
  GIT_TRANSFER_TRACE: 1
  GIT_CURL_VERBOSE: 1

jobs:
  update:
    if: >-
      !github.event.repository.fork
      && (
        github.event_name == 'schedule'
        || github.event_name == 'workflow_dispatch'
        || (
          github.event.issue.pull_request
          && github.event.comment.body == '@conda-bot render'
        )
      )
    runs-on: ubuntu-latest
    steps:
      - if: github.event_name == 'issue_comment'
        name: configure git origin
        run: |
          echo REPOSITORY=$(curl --silent ${{ github.event.issue.pull_request.url }} | jq --raw-output '.head.repo.full_name') >> $GITHUB_ENV
          echo REF=$(curl --silent ${{ github.event.issue.pull_request.url }} | jq --raw-output '.head.ref') >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          repository: ${{ env.REPOSITORY || github.repository }}
          ref: ${{ env.REF || '' }}

      - name: configure git user
        run: |
          git config user.name 'Conda Bot'
          git config user.email '18747875+conda-bot@users.noreply.github.com'

      - if: github.event_name == 'issue_comment'
        name: configure git token
        run: |
          git config http.https://github.com/.extraHeader 'AUTHORIZATION: token ${{ secrets.SYNC_TOKEN }}'

      - name: combine recent durations from artifacts
        uses: conda/actions/combine-durations@combine-durations

      - name: commit updated durations
        run: git add . && git commit --message "Update test durations" || true

      - name: sync & template files
        uses: conda/actions/template-files@template-files

      - name: commit templated files
        run: git add . && git commit --message "Sync files" || true

      - if: github.event_name == 'issue_comment'
        run: |
          git config --local --list
          echo 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
          [[ "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" == "${{ secrets.SYNC_TOKEN }}" ]] && echo "SAME" || echo "DIFF"
          git \
            -c "http.https://github.com/.extraheader=" \
            -c "http.https://github.com/${{ env.REPOSITORY }}/.extraheader=AUTHORIZATION: bearer ${{ secrets.SYNC_TOKEN }}" \
            push https://github.com/${{ env.REPOSITORY }}

      - if: github.event_name != 'issue_comment'
        name: create update PR
        uses: peter-evans/create-pull-request@v5
        with:
          push-to-fork: kenodegard-bot/${{ github.event.repository.name }}
          token: ${{ secrets.SYNC_TOKEN }}  # repo scoped PAT
          branch: update
          delete-branch: true
          title: ðŸ¤– Update
          body: |
            [update.yml]: ${{ github.server_url }}/${{ github.repository }}/blob/main/.github/workflows/update.yml

            This PR was created automatically by the [`update.yml`][update.yml] workflow.

      - if: github.event_name != 'issue_comment'
        run: |
          git config --local --list